{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","this","length","slice","join","className","value","max","getGoodsTitle","map","good","includes","type","onClick","setState","filter","selected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,mDAGlB,WACE,OAAwC,IAApCC,KAAKF,MAAMC,cAAcE,OACpB,oBAG+B,IAApCD,KAAKF,MAAMC,cAAcE,OACrB,GAAN,OAAUD,KAAKF,MAAMC,cAAc,GAAnC,gBAGI,GAAN,OAAUC,KAAKF,MAAMC,cAAcG,MAAM,GAAI,GAAGC,KAAK,MAArD,gBACQH,KAAKF,MAAMC,cAAcG,OAAO,GADxC,mB,oBAIF,WAAU,IAAD,OACP,OACE,sBAAKE,UAAU,0GAAf,UAUE,0BACEA,UAAU,mBACVC,MAAOL,KAAKF,MAAMC,cAAcE,OAChCK,IAAKV,EAAgBK,SAGvB,oBAAIG,UAAU,+BAAd,SAA8CJ,KAAKO,kBAEnD,6BACGX,EAAgBY,KAAI,SAAAC,GAAI,OACvB,qBACEL,UAAS,yLAML,EAAKN,MAAMC,cAAcW,SAASD,IAAS,yBANtC,oBADX,UAWGA,EAED,wBACEE,KAAK,SACLP,UAAS,0EAGP,EAAKN,MAAMC,cAAcW,SAASD,GAAQ,YAAc,aAHjD,sBAKTG,QAAS,WACP,EAAKC,UAAS,SAAAf,GAAK,MAAK,CACtBC,cAAiBD,EAAMC,cAAcW,SAASD,GAA/B,YAEPX,EAAMC,cACTe,QAAO,SAAAC,GAAQ,OAAKA,IAAaN,MAHvB,sBACPX,EAAMC,eADC,CACcU,SAVnC,SAgBG,EAAKX,MAAMC,cAAcW,SAASD,GAC/B,SACA,aAtBDA,QA4BVT,KAAKF,MAAMC,cAAcE,OAAS,GACjC,wBACEU,KAAK,SACLP,UAAU,oBACVQ,QAAS,WACP,EAAKC,SAAS,CAAEd,cAAe,MAJnC,0B,GA9EQiB,IAAMC,WA6FTpB,IC9GfqB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cabb438d.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[]\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  getGoodsTitle() {\n    if (this.state.selectedGoods.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (this.state.selectedGoods.length === 1) {\n      return `${this.state.selectedGoods[0]} is selected`;\n    }\n\n    return `${this.state.selectedGoods.slice(0, -1).join(', ')\n    } and ${this.state.selectedGoods.slice(-1)} are selected`;\n  }\n\n  render() {\n    return (\n      <div className=\"\n        container\n        is-max-desktop\n        is-flex\n        is-flex-direction-column\n        is-align-items-center\n        notification\n        is-light\n      \"\n      >\n        <progress\n          className=\"progress is-info\"\n          value={this.state.selectedGoods.length}\n          max={goodsFromServer.length}\n        />\n\n        <h1 className=\"title is-3 has-text-centered\">{this.getGoodsTitle()}</h1>\n\n        <ul>\n          {goodsFromServer.map(good => (\n            <li\n              className={`\n                box\n                is-flex\n                is-justify-content-space-between\n                is-align-items-center\n                mb-3\n                ${this.state.selectedGoods.includes(good) && 'has-background-primary'}\n              `}\n              key={good}\n            >\n              {good}\n\n              <button\n                type=\"button\"\n                className={`\n                button\n                ml-6\n                ${this.state.selectedGoods.includes(good) ? 'is-danger' : 'is-success'}\n                `}\n                onClick={() => {\n                  this.setState(state => ({\n                    selectedGoods: (!state.selectedGoods.includes(good))\n                      ? [...state.selectedGoods, good]\n                      : [...state.selectedGoods\n                        .filter(selected => (selected !== good))],\n                  }));\n                }}\n              >\n                {this.state.selectedGoods.includes(good)\n                  ? 'Remove'\n                  : 'Select'}\n              </button>\n            </li>\n          ))}\n        </ul>\n\n        {this.state.selectedGoods.length > 0 && (\n          <button\n            type=\"button\"\n            className=\"button is-warning\"\n            onClick={() => {\n              this.setState({ selectedGoods: [] });\n            }}\n          >\n            Clear\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}