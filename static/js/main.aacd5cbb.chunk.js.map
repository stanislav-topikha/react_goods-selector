{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","this","length","slice","join","good","setState","includes","filter","selected","className","classNames","value","max","getGoodsTitle","map","isGoodSelected","type","onClick","selectHandler","clearHandler","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,mDAGlB,WACE,OAAwC,IAApCC,KAAKF,MAAMC,cAAcE,OACpB,oBAG+B,IAApCD,KAAKF,MAAMC,cAAcE,OACrB,GAAN,OAAUD,KAAKF,MAAMC,cAAc,GAAnC,gBAGI,GAAN,OAAUC,KAAKF,MAAMC,cAAcG,MAAM,GAAI,GAAGC,KAAK,MAArD,gBACQH,KAAKF,MAAMC,cAAcG,OAAO,GADxC,mB,2BAIF,SAAcE,GACZ,OAAOJ,KAAKK,UAAS,SAAAP,GAAK,MAAK,CAC7BC,cAAiBD,EAAMC,cAAcO,SAASF,GAA/B,YAEPN,EAAMC,cACTQ,QAAO,SAAAC,GAAQ,OAAKA,IAAaJ,MAHvB,sBACPN,EAAMC,eADC,CACcK,U,0BAMjC,WACE,OAAOJ,KAAKK,SAAS,CAAEN,cAAe,O,oBAGxC,WAAU,IAAD,OACP,OACE,sBAAKU,UAAWC,IACd,YACA,iBACA,UACA,2BACA,wBACA,eACA,YAPF,UAUE,0BACED,UAAWC,IAAW,WAAY,WAClCC,MAAOX,KAAKF,MAAMC,cAAcE,OAChCW,IAAKhB,EAAgBK,SAGvB,oBAAIQ,UAAU,+BAAd,SAA8CT,KAAKa,kBAEnD,6BACGjB,EAAgBkB,KAAI,SAAAV,GACnB,IAAMW,EAAiB,EAAKjB,MAAMC,cAAcO,SAASF,GAEzD,OACE,qBACEK,UAAWC,IACT,MACA,UACA,mCACA,wBACA,OACA,CAAE,yBAA0BK,IAPhC,UAWGX,EAED,wBACEY,KAAK,SACLP,UAAWC,IACT,SACA,OACA,CAAE,YAAaK,GACf,CAAE,cAAeA,IAEnBE,QAAS,kBAAM,EAAKC,cAAcd,IARpC,SAUGW,EACG,SACA,aAhBDX,QAuBZJ,KAAKF,MAAMC,cAAcE,OAAS,GACjC,wBACEe,KAAK,SACLP,UAAU,oBACVQ,QAAS,kBAAM,EAAKE,gBAHtB,0B,GAzFQC,IAAMC,WAsGTxB,ICxHfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aacd5cbb.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[]\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  getGoodsTitle() {\n    if (this.state.selectedGoods.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (this.state.selectedGoods.length === 1) {\n      return `${this.state.selectedGoods[0]} is selected`;\n    }\n\n    return `${this.state.selectedGoods.slice(0, -1).join(', ')\n    } and ${this.state.selectedGoods.slice(-1)} are selected`;\n  }\n\n  selectHandler(good: string) {\n    return this.setState(state => ({\n      selectedGoods: (!state.selectedGoods.includes(good))\n        ? [...state.selectedGoods, good]\n        : [...state.selectedGoods\n          .filter(selected => (selected !== good))],\n    }));\n  }\n\n  clearHandler() {\n    return this.setState({ selectedGoods: [] });\n  }\n\n  render() {\n    return (\n      <div className={classNames(\n        'container',\n        'is-max-desktop',\n        'is-flex',\n        'is-flex-direction-column',\n        'is-align-items-center',\n        'notification',\n        'is-light',\n      )}\n      >\n        <progress\n          className={classNames('progress', 'is-info')}\n          value={this.state.selectedGoods.length}\n          max={goodsFromServer.length}\n        />\n\n        <h1 className=\"title is-3 has-text-centered\">{this.getGoodsTitle()}</h1>\n\n        <ul>\n          {goodsFromServer.map(good => {\n            const isGoodSelected = this.state.selectedGoods.includes(good);\n\n            return (\n              <li\n                className={classNames(\n                  'box',\n                  'is-flex',\n                  'is-justify-content-space-between',\n                  'is-align-items-center',\n                  'mb-3',\n                  { 'has-background-primary': isGoodSelected },\n                )}\n                key={good}\n              >\n                {good}\n\n                <button\n                  type=\"button\"\n                  className={classNames(\n                    'button',\n                    'ml-6',\n                    { 'is-danger': isGoodSelected },\n                    { 'is-success': !isGoodSelected },\n                  )}\n                  onClick={() => this.selectHandler(good)}\n                >\n                  {isGoodSelected\n                    ? 'Remove'\n                    : 'Select'}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n\n        {this.state.selectedGoods.length > 0 && (\n          <button\n            type=\"button\"\n            className=\"button is-warning\"\n            onClick={() => this.clearHandler()}\n          >\n            Clear\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}